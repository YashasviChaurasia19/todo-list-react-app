{"ast":null,"code":"import _toConsumableArray from\"F:/react projects/react-todo-list-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"F:/react projects/react-todo-list-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Todo from'./Todo';import TodoForm from'./TodoForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var addTodo=function addTodo(todo){if(!todo.text||/^\\$*$/.test(todo.text)){return;}var newTodos=[].concat(_toConsumableArray(todos),[todo]);setTodos(newTodos);};var updateTodo=function updateTodo(todoId,newValue){if(!newValue.text||/^\\$*$/.test(newValue.text)){return;}setTodos(function(prev){return prev.map(function(item){return item.id===todoId?newValue:item;});});};var removeTodo=function removeTodo(id){var removeArr=_toConsumableArray(todos).filter(function(todo){return todo.id!==id;});setTodos(removeArr);};var completeTodo=function completeTodo(id){var updatedTodos=todos.map(function(todo){if(todo.id===id){todo.isComplete=!todo.isComplete;}return todo;});setTodos(updatedTodos);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"What's the plan for today?\"}),/*#__PURE__*/_jsx(TodoForm,{onSubmit:addTodo}),/*#__PURE__*/_jsx(Todo,{todos:todos,completeTodo:completeTodo,removeTodo:removeTodo,updateTodo:updateTodo})]});}export default TodoList;","map":{"version":3,"sources":["F:/react projects/react-todo-list-app/src/components/TodoList.js"],"names":["React","useState","Todo","TodoForm","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removeArr","filter","completeTodo","updatedTodos","isComplete"],"mappings":"gUAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,KAA6B,OAA7B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFAEA,QAASC,CAAAA,QAAT,EAAoB,CAEhB,cAAyBH,QAAQ,CAAC,EAAD,CAAjC,wCAAOI,KAAP,eAAaC,QAAb,eACA,GAAMC,CAAAA,OAAO,CAAE,QAATA,CAAAA,OAAS,CAAAC,IAAI,CAAG,CAClB,GAAG,CAACA,IAAI,CAACC,IAAN,EAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,CAAyC,CACrC,OACH,CAGL,GAAME,CAAAA,QAAQ,8BAAON,KAAP,GAAaG,IAAb,EAAd,CACAF,QAAQ,CAACK,QAAD,CAAR,CAEH,CATG,CAWJ,GAAMC,CAAAA,UAAU,CAAC,QAAXA,CAAAA,UAAW,CAACC,MAAD,CAAQC,QAAR,CAAmB,CAChC,GAAG,CAACA,QAAQ,CAACL,IAAV,EAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAArB,CAAiD,CAC7C,OACH,CACDH,QAAQ,CAAC,SAAAS,IAAI,QAAEA,CAAAA,IAAI,CAACC,GAAL,CAAS,SAAAC,IAAI,QAAGA,CAAAA,IAAI,CAACC,EAAL,GAAUL,MAAV,CAAoBC,QAApB,CAA+BG,IAAlC,EAAb,CAAF,EAAL,CAAR,CAEH,CAND,CAQA,GAAME,CAAAA,UAAU,CAAC,QAAXA,CAAAA,UAAW,CAAAD,EAAE,CAAE,CACjB,GAAME,CAAAA,SAAS,CAAE,mBAAIf,KAAJ,EAAWgB,MAAX,CAAkB,SAAAb,IAAI,QAAGA,CAAAA,IAAI,CAACU,EAAL,GAAUA,EAAb,EAAtB,CAAjB,CACAZ,QAAQ,CAACc,SAAD,CAAR,CACH,CAHD,CAIA,GAAME,CAAAA,YAAY,CAAE,QAAdA,CAAAA,YAAc,CAAAJ,EAAE,CAAG,CACrB,GAAIK,CAAAA,YAAY,CAAClB,KAAK,CAACW,GAAN,CAAU,SAAAR,IAAI,CAAG,CAC9B,GAAGA,IAAI,CAACU,EAAL,GAAUA,EAAb,CAAgB,CACZV,IAAI,CAACgB,UAAL,CAAgB,CAAChB,IAAI,CAACgB,UAAtB,CACH,CACD,MAAOhB,CAAAA,IAAP,CACH,CALgB,CAAjB,CAMCF,QAAQ,CAACiB,YAAD,CAAR,CACJ,CARD,CASI,mBACI,oCACI,kDADJ,cAII,KAAC,QAAD,EAAW,QAAQ,CAAEhB,OAArB,EAJJ,cAKI,KAAC,IAAD,EAAM,KAAK,CAAEF,KAAb,CACA,YAAY,CAAEiB,YADd,CAEA,UAAU,CAAEH,UAFZ,CAGC,UAAU,CAAEP,UAHb,EALJ,GADJ,CAYH,CAED,cAAeR,CAAAA,QAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList() {\r\n    \r\n    const [todos,setTodos] = useState([]);\r\n    const addTodo= todo =>{\r\n        if(!todo.text || /^\\$*$/.test(todo.text)){\r\n            return;\r\n        }\r\n\r\n    \r\n    const newTodos = [...todos,todo];\r\n    setTodos(newTodos);\r\n   \r\n};\r\n\r\nconst updateTodo=(todoId,newValue)=>{\r\n    if(!newValue.text || /^\\$*$/.test(newValue.text)){\r\n        return;\r\n    }\r\n    setTodos(prev=>prev.map(item=>(item.id===todoId  ? newValue : item)));\r\n\r\n};\r\n\r\nconst removeTodo=id=>{\r\n    const removeArr =[...todos].filter(todo =>todo.id!==id)\r\n    setTodos(removeArr);\r\n};\r\nconst completeTodo= id =>{\r\n    let updatedTodos=todos.map(todo =>{\r\n        if(todo.id===id){\r\n            todo.isComplete=!todo.isComplete;\r\n        }\r\n        return todo;\r\n    });\r\n     setTodos(updatedTodos);\r\n};\r\n    return (\r\n        <div>\r\n            <h1>\r\n                What's the plan for today?\r\n            </h1>\r\n            <TodoForm  onSubmit={addTodo} />\r\n            <Todo todos={todos} \r\n            completeTodo={completeTodo}\r\n            removeTodo={removeTodo}\r\n             updateTodo={updateTodo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n"]},"metadata":{},"sourceType":"module"}