{"ast":null,"code":"var _jsxFileName = \"F:\\\\react projects\\\\react-todo-list-app\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const hendleChange = e => setInput(e.target.value);\n\n  const hendleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: (hendleSubmit, props.onSubmit),\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \" update to todo \",\n        value: input,\n        name: \"text\",\n        onChange: hendleChange,\n        className: \"todo-input\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \" update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \" add to todo \",\n        value: input,\n        name: \"text\",\n        onChange: hendleChange,\n        className: \"todo-input\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \" Add TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"2KRv92bgMAxwnVURN2kfWoIeRGw=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["F:/react projects/react-todo-list-app/src/components/TodoForm.js"],"names":["React","useState","useRef","useEffect","TodoForm","props","inputRef","current","focus","input","setInput","edit","value","hendleChange","e","target","hendleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,MAAxB,EAA+BC,SAA/B,QAA+C,OAA/C;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAGrB,QAAMC,QAAQ,GAACJ,MAAM,CAAC,IAAD,CAArB;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,CAAT;AAIA,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAkBT,QAAQ,CAACI,KAAK,CAACM,IAAN,GAAaN,KAAK,CAACM,IAAN,CAAWC,KAAxB,GAA8B,EAA/B,CAA/B;;AAGA,QAAMC,YAAY,GAAGC,CAAC,IAClBJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASH,KAAV,CADZ;;AAGI,QAAMI,YAAY,GAAEF,CAAC,IAAE;AACnBA,IAAAA,CAAC,CAACG,cAAF;AAGAZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AACXC,MAAAA,EAAE,EAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAzB,CADQ;AAEVC,MAAAA,IAAI,EAACd;AAFK,KAAf;AAKEC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAEL,GAXD;;AAcJ,sBAEI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,GAAEM,YAAY,EAAEX,KAAK,CAACa,QAAtB,CAApC;AAAA,cACCb,KAAK,CAACM,IAAN,gBACA;AAAA,8BACD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,kBAA/B;AACE,QAAA,KAAK,EAAGF,KADV;AAEC,QAAA,IAAI,EAAC,MAFN;AAGC,QAAA,QAAQ,EAAEI,YAHX;AAIC,QAAA,SAAS,EAAC,YAJX;AAKE,QAAA,GAAG,EAAGP;AALR;AAAA;AAAA;AAAA;AAAA,cADC,eAOA;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA,oBADA,gBAUC;AAAA,mCAAG;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,eAA/B;AACH,QAAA,KAAK,EAAGG,KADL;AAEJ,QAAA,IAAI,EAAC,MAFD;AAGJ,QAAA,QAAQ,EAAEI,YAHN;AAIJ,QAAA,SAAS,EAAC,YAJN;AAKH,QAAA,GAAG,EAAGP;AALH;AAAA;AAAA;AAAA;AAAA,cAAH,eAMD;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANC;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,UAFJ;AAuBH;;GApDQF,Q;;KAAAA,Q;AAsDT,eAAeA,QAAf","sourcesContent":["import React, {useState,useRef,useEffect} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n\r\n\r\n    const inputRef=useRef(null)\r\n     \r\n    useEffect(()=>{\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const[input,setInput] =useState(props.edit ? props.edit.value:'');\r\n \r\n   \r\n    const hendleChange = e=>(\r\n        setInput(e.target.value));\r\n        \r\n        const hendleSubmit= e=>{\r\n            e.preventDefault(); \r\n            \r\n        \r\n            props.onSubmit({\r\n                id:Math.floor(Math.random()*10000),\r\n                 text:input \r\n              });\r\n\r\n              setInput('');\r\n              \r\n        };\r\n   \r\n    \r\n    return (\r\n        \r\n        <form className=\"todo-form\" onSubmit={hendleSubmit ,props.onSubmit }>\r\n        {props.edit?\r\n        (<>\r\n        <input type=\"text\" placeholder=\" update to todo \"\r\n          value ={input}\r\n         name=\"text\"\r\n         onChange={hendleChange}\r\n         className=\"todo-input\"\r\n          ref ={inputRef}/>\r\n         <button className=\"todo-button\"> update</button></>):\r\n         \r\n         (<> <input type=\"text\" placeholder=\" add to todo \"\r\n          value ={input}\r\n         name=\"text\"\r\n         onChange={hendleChange}\r\n         className=\"todo-input\"\r\n          ref ={inputRef}/>\r\n         <button className=\"todo-button\"> Add TODO</button></>)}\r\n        \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm\r\n"]},"metadata":{},"sourceType":"module"}