{"ast":null,"code":"var _jsxFileName = \"F:\\\\react projects\\\\react-todo-list-app\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport { COMPLETIONSTATEMENT_TYPES } from '@babel/types';\nimport React, { useState } from 'react';\nimport TodoList from './TodoList';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo({\n  todos,\n  completeTodo,\n  removeTodo\n}) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updatetodo(todo.id, value);\n  };\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this));\n}\n\n_s(Todo, \"8XDesTwt66ub++6qU81cSHjdV5E=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["F:/react projects/react-todo-list-app/src/components/Todo.js"],"names":["COMPLETIONSTATEMENT_TYPES","React","useState","TodoList","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","edit","setEdit","id","value","submitUpdate","updatetodo","todo","map","index","isComplete","text"],"mappings":";;;AAAA,SAASA,yBAAT,QAA0C,cAA1C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAOC,EAAAA,YAAP;AAAqBC,EAAAA;AAArB,CAAd,EAAgD;AAAA;;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC7BW,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;;AAIJ,QAAMC,YAAY,GAACD,KAAK,IAAE;AACtBE,IAAAA,UAAU,CAACC,IAAI,CAACJ,EAAN,EAASC,KAAT,CAAV;AAA0B,GAD9B;;AAEC,SAAON,KAAK,CAACU,GAAN,CAAU,CAACD,IAAD,EAAOE,KAAP,kBACV;AACI,IAAA,SAAS,EAAEF,IAAI,CAACG,UAAL,GAAkB,mBAAlB,GAAwC,UADvD;AAAA,4BAII;AAAmB,MAAA,OAAO,EAAE,MAAMX,YAAY,CAACQ,IAAI,CAACJ,EAAN,CAA9C;AAAA,gBACKI,IAAI,CAACI;AADV,OAAUJ,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA,YAJJ,eAQI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI,QAAC,iBAAD;AAAmB,QAAA,OAAO,EAAE,MAAKH,UAAU,CAACO,IAAI,CAACJ,EAAN,CAA3C;AACA,QAAA,SAAS,EAAC;AADV;AAAA;AAAA;AAAA;AAAA,cADJ,eAGF,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAKD,OAAO,CAAC;AAACC,UAAAA,EAAE,EAAEI,IAAI,CAACJ,EAAV;AAAeC,UAAAA,KAAK,EAACG,IAAI,CAACI;AAA1B,SAAD,CAA7B;AACE,QAAA,SAAS,EAAC;AADZ;AAAA;AAAA;AAAA;AAAA,cAHE;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,KAESF,KAFT;AAAA;AAAA;AAAA;AAAA,UADA,CAAP;AAkBA;;GAzBQZ,I;;KAAAA,I;AA2BT,eAAeA,IAAf","sourcesContent":["import { COMPLETIONSTATEMENT_TYPES } from '@babel/types'\r\nimport React, { useState } from 'react'\r\nimport TodoList from './TodoList'\r\nimport TodoForm from './TodoForm'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n\r\nfunction Todo({todos,completeTodo, removeTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n});\r\nconst submitUpdate=value=>{\r\n    updatetodo(todo.id,value)}\r\n return todos.map((todo, index)=> (\r\n        <div\r\n            className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n            key={index}>\r\n\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine onClick={()=> removeTodo(todo.id) }\r\n                className='delete-icon'/>\r\n          <TiEdit onClick={()=> setEdit({id: todo.id , value:todo.text}) }\r\n            className='edit-icon'/>\r\n        </div>\r\n\r\n          </div >\r\n   ) );\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}