{"ast":null,"code":"var _jsxFileName = \"F:\\\\react projects\\\\react-todo-list-app\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  var todo;\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\$*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoid, newValue) => {\n    if (!newValue.text || /^\\$*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id == id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the plan for today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"uu1hS44ImpqtDP84/kJI6RehsRs=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["F:/react projects/react-todo-list-app/src/components/TodoList.js"],"names":["React","useState","Todo","TodoForm","TodoList","todo","todos","setTodos","addTodo","text","test","newTodos","updateTodo","todoid","newValue","prev","map","item","id","todoId","removeTodo","removeArr","filter","completeTodo","updatedTodos","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,MAAIC,IAAJ;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;;AACA,QAAMO,OAAO,GAAEH,IAAI,IAAG;AAClB,QAAG,CAACA,IAAI,CAACI,IAAN,IAAc,QAAQC,IAAR,CAAaL,IAAI,CAACI,IAAlB,CAAjB,EAAyC;AACrC;AACH;;AAGL,UAAME,QAAQ,GAAG,CAACN,IAAD,EAAO,GAAGC,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACI,QAAD,CAAR;AAEH,GATG;;AAWJ,QAAMC,UAAU,GAAC,CAACC,MAAD,EAAQC,QAAR,KAAmB;AAChC,QAAG,CAACA,QAAQ,CAACL,IAAV,IAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAArB,EAAiD;AAC7C;AACH;;AACDF,IAAAA,QAAQ,CAACQ,IAAI,IAAEA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAGA,IAAI,CAACC,EAAL,KAAUC,MAAV,GAAkBL,QAAlB,GAA4BG,IAA5C,CAAP,CAAR;AAEH,GAND;;AAQA,QAAMG,UAAU,GAACF,EAAE,IAAE;AACjB,UAAMG,SAAS,GAAE,CAAC,GAAGf,KAAJ,EAAWgB,MAAX,CAAkBjB,IAAI,IAAGA,IAAI,CAACa,EAAL,KAAUA,EAAnC,CAAjB;AACAX,IAAAA,QAAQ,CAACc,SAAD,CAAR;AACH,GAHD;;AAIA,QAAME,YAAY,GAAEL,EAAE,IAAG;AACrB,QAAIM,YAAY,GAAClB,KAAK,CAACU,GAAN,CAAUX,IAAI,IAAG;AAC9B,UAAGA,IAAI,CAACa,EAAL,IAASA,EAAZ,EAAe;AACXb,QAAAA,IAAI,CAACoB,UAAL,GAAgB,CAACpB,IAAI,CAACoB,UAAtB;AACH;;AACD,aAAOpB,IAAP;AACH,KALgB,CAAjB;AAMCE,IAAAA,QAAQ,CAACiB,YAAD,CAAR;AACJ,GARD;;AASI,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,QAAD;AAAW,MAAA,QAAQ,EAAEhB;AAArB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,KAAb;AAAoB,MAAA,YAAY,EAAEiB,YAAlC;AACJ,MAAA,UAAU,EAAEH,UADR;AACoB,MAAA,UAAU,EAAER;AADhC;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA7CQR,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList() {\r\n    var todo;\r\n    const [todos,setTodos] = useState([]);\r\n    const addTodo= todo =>{\r\n        if(!todo.text || /^\\$*$/.test(todo.text)){\r\n            return;\r\n        }\r\n\r\n    \r\n    const newTodos = [todo, ...todos];\r\n    setTodos(newTodos);\r\n   \r\n};\r\n\r\nconst updateTodo=(todoid,newValue)=>{\r\n    if(!newValue.text || /^\\$*$/.test(newValue.text)){\r\n        return;\r\n    }\r\n    setTodos(prev=>prev.map(item=>(item.id===todoId ?newValue: item)));\r\n\r\n};\r\n\r\nconst removeTodo=id=>{\r\n    const removeArr =[...todos].filter(todo =>todo.id!==id)\r\n    setTodos(removeArr);\r\n};\r\nconst completeTodo= id =>{\r\n    let updatedTodos=todos.map(todo =>{\r\n        if(todo.id==id){\r\n            todo.isComplete=!todo.isComplete;\r\n        }\r\n        return todo;\r\n    });\r\n     setTodos(updatedTodos);\r\n};\r\n    return (\r\n        <div>\r\n            <h1>\r\n                What's the plan for today?\r\n            </h1>\r\n            <TodoForm  onSubmit={addTodo}/>\r\n            <Todo todos={todos} completeTodo={completeTodo}\r\n        removeTodo={removeTodo} updateTodo={updateTodo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n"]},"metadata":{},"sourceType":"module"}