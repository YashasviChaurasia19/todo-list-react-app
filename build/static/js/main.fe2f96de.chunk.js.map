{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","inputRef","useRef","useEffect","current","focus","useState","edit","value","input","setInput","hendleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","onsubmit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAwDeA,MAtDf,SAAkBC,GAGd,IAAMC,EAASC,iBAAO,MAEtBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,MAAuBC,mBAASN,EAAMO,KAAOP,EAAMO,KAAKC,MAAM,IAA9D,mBAAMC,EAAN,KAAYC,EAAZ,KAGMC,EAAe,SAAAC,GAAC,OAClBF,EAASE,EAAEC,OAAOL,QAgBtB,OAEI,sBAAMM,UAAU,YAAYC,SAhBR,SAAAH,GAChBA,EAAEI,iBAGVhB,EAAMe,SAAS,CACTE,GAAGC,KAAKC,MAAoB,IAAdD,KAAKE,UAClBC,KAAKZ,IAGPC,EAAS,KAOV,SACCV,EAAMO,KACN,qCACD,uBAAOe,KAAK,OAAOC,YAAY,yBAC7Bf,MAAQC,EACTe,KAAK,OACLC,SAAUd,EACVG,UAAU,aACTY,IAAMzB,IACP,wBAAQa,UAAU,cAAlB,wBAEC,yCAAG,uBAAOQ,KAAK,OAAOC,YAAY,uBAClCf,MAAQC,EACTe,KAAK,OACLC,SAAUd,EACVG,UAAU,aACTY,IAAMzB,IACP,wBAAQa,UAAU,cAAlB,6B,cCNMa,MArCf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAMC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAC3C,EAAwBzB,mBAAS,CAC7BW,GAAI,KACJT,MAAO,KAFX,mBAAOD,EAAP,KAAayB,EAAb,KAaJ,OAAGzB,EAAKU,GACG,cAAC,EAAD,CAAUV,KAAMA,EAAM0B,SATd,SAACzB,GAChBuB,EAAWxB,EAAKU,GAAGT,GACvBwB,EAAQ,CACJf,GAAG,KACHT,MAAO,QAOHoB,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACV,sBACItB,UAAWqB,EAAKE,WAAa,oBAAsB,WADvD,UAII,qBAAmBC,QAAS,kBAAMT,EAAaM,EAAKlB,KAApD,SACKkB,EAAKd,MADAc,EAAKlB,IAIf,qBAAKH,UAAU,QAAf,SACI,cAAC,IAAD,CAAmBwB,QAAS,kBAAKR,EAAWK,EAAKlB,KACjDH,UAAU,oBARTsB,OC0BFG,MAjDf,WAEI,MAAyBjC,mBAAS,IAAlC,mBAAOsB,EAAP,KAAaY,EAAb,KAiCA,OACI,gCACI,4DAGA,cAAC,EAAD,CAAWzB,SArCJ,SAAAoB,GACX,GAAIA,EAAKd,OAAQ,QAAQoB,KAAKN,EAAKd,MAAnC,CAKJ,IAAMqB,EAAQ,sBAAOd,GAAP,CAAaO,IAC3BK,EAASE,OA+BD,cAAC,EAAD,CAAMd,MAAOA,EACbC,aAhBQ,SAAAZ,GAChB,IAAI0B,EAAaf,EAAMM,KAAI,SAAAC,GAIvB,OAHGA,EAAKlB,KAAKA,IACTkB,EAAKE,YAAYF,EAAKE,YAEnBF,KAEVK,EAASG,IAUFb,WArBK,SAAAb,GACb,IAAM2B,EAAW,YAAIhB,GAAOiB,QAAO,SAAAV,GAAI,OAAGA,EAAKlB,KAAKA,KACpDuB,EAASI,IAoBAb,WA9BI,SAACe,EAAOC,GACjBA,EAAS1B,OAAQ,QAAQoB,KAAKM,EAAS1B,OAG3CmB,GAAS,SAAAQ,GAAI,OAAEA,EAAKd,KAAI,SAAAe,GAAI,OAAGA,EAAKhC,KAAK6B,EAAUC,EAAWE,eCLnDC,MATf,WACE,OACE,qBAAKpC,UAAU,WAAf,SACE,cAAC,EAAD,OCLNqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fe2f96de.chunk.js","sourcesContent":["import React, {useState,useRef,useEffect} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n\r\n\r\n    const inputRef=useRef(null)\r\n     \r\n    useEffect(()=>{\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const[input,setInput] =useState(props.edit ? props.edit.value:'');\r\n \r\n   \r\n    const hendleChange = e=>(\r\n        setInput(e.target.value));\r\n        \r\n        const hendleSubmit= e=>{\r\n            e.preventDefault(); \r\n            \r\n        \r\n    props.onSubmit({\r\n          id:Math.floor(Math.random()*10000),\r\n           text:input \r\n              });\r\n\r\n         setInput('');\r\n              \r\n        };\r\n   \r\n    \r\n    return (\r\n        \r\n        <form className=\"todo-form\" onSubmit={hendleSubmit  }>\r\n        {props.edit?\r\n        (<>\r\n        <input type=\"text\" placeholder=\" ✍update to todo \"\r\n          value ={input}\r\n         name=\"text\"\r\n         onChange={hendleChange}\r\n         className=\"todo-input\"\r\n          ref ={inputRef}/>\r\n         <button className=\"todo-button\"> update</button></>):\r\n         \r\n         (<> <input type=\"text\" placeholder=\" ✍ add to todo \"\r\n          value ={input}\r\n         name=\"text\"\r\n         onChange={hendleChange}\r\n         className=\"todo-input\"\r\n          ref ={inputRef}/>\r\n         <button className=\"todo-button\"> Add TODO</button></>)}\r\n        \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm\r\n","\r\nimport React, { useState } from 'react'\r\n\r\nimport TodoForm from './TodoForm'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n\r\nfunction Todo({todos,completeTodo, removeTodo, updateTodo,}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n});\r\n\r\nconst submitUpdate=(value)=>{\r\n    updateTodo(edit.id,value)\r\nsetEdit({\r\n    id:null,\r\n    value: ''\r\n\r\n});\r\n}\r\nif(edit.id){\r\n    return <TodoForm edit={edit} onsubmit={submitUpdate}/>\r\n}\r\n return todos.map((todo, index)=> (\r\n        <div\r\n            className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n            key={index}>\r\n\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine onClick={()=> removeTodo(todo.id) }\r\n                className='delete-icon'/>\r\n          {/* <TiEdit onClick={()=> setEdit({id: todo.id , value:todo.text}) }\r\n            className='edit-icon'/> */}\r\n        </div>\r\n\r\n          </div >\r\n   ) );\r\n}\r\n\r\nexport default Todo\r\n","import React,{useState} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList() {\r\n    \r\n    const [todos,setTodos] = useState([]);\r\n    const addTodo= todo =>{\r\n        if(!todo.text || /^\\$*$/.test(todo.text)){\r\n            return;\r\n        }\r\n\r\n    \r\n    const newTodos = [...todos,todo];\r\n    setTodos(newTodos);\r\n   \r\n};\r\n\r\nconst updateTodo=(todoId,newValue)=>{\r\n    if(!newValue.text || /^\\$*$/.test(newValue.text)){\r\n        return;\r\n    }\r\n    setTodos(prev=>prev.map(item=>(item.id===todoId  ? newValue : item)));\r\n\r\n};\r\n\r\nconst removeTodo=id=>{\r\n    const removeArr =[...todos].filter(todo =>todo.id!==id)\r\n    setTodos(removeArr);\r\n};\r\nconst completeTodo= id =>{\r\n    let updatedTodos=todos.map(todo =>{\r\n        if(todo.id===id){\r\n            todo.isComplete=!todo.isComplete;\r\n        }\r\n        return todo;\r\n    });\r\n     setTodos(updatedTodos);\r\n};\r\n    return (\r\n        <div>\r\n            <h1>\r\n                What's the plan for today?\r\n            </h1>\r\n            <TodoForm  onSubmit={addTodo} />\r\n            <Todo todos={todos} \r\n            completeTodo={completeTodo}\r\n            removeTodo={removeTodo}\r\n             updateTodo={updateTodo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react';\nimport './App.css';\nimport TodoForm from './components/TodoForm';\n\n\nimport TodoList from './components/TodoList';\n\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}